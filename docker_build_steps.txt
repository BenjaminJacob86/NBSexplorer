

# Sart from having code base and a docker file

	FROM python
	COPY . /app
	WORKDIR /app
	VOLUME /app								# necessary to be able to link voluems for exchange with host system
	RUN pip install my_api.tar.gz
	RUN pip install -r requirements.txt
	CMD python ./main.py
	Then when running that image you need to pass the --volume flag to mount that volume to some path on the host machine:

	docker build -t my_image .
	docker run --volume=/path/on/host:/app my_image
	If you wish to mount the volume to the directory where your building your Dockerfile, you can do it like this:

# docker build steps
docker build -t name .

# define local directory?ls
docker run name


# to be able to write files to host directory one needs to give the poath
docker run -v /Users/<path>:/<container path>

# alternative is mount?

https://stackoverflow.com/questions/60889211/how-to-write-a-file-to-the-host-when-using-docker:
docker run --volume=/path/on/host:/app my_image


You can add a VOLUME to your Dockerfile:

docker build -t my_image .
docker run --volume=$(pwd):/app my_image
Both of these will make it so that the contents of the container's /app directory and the specified directory on your host machine are "in sync", so the file your script creates in the container will appear on your host also.


docker run --volume=$(pwd):/app nbsscript

# ok works



##### Publish to docker #####################
tag it with the name

docker tag nbsscript benjaminjacob86/nbsscript

one can push from windows desktop app, before one needs to login inside the app
